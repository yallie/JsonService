version: 1.0.{build}
image: Visual Studio 2017
environment:
  JsonServicesSampleServer: true

before_build:
- nuget restore src\JsonServices.sln -verbosity quiet
- choco install opencover.portable -y -r >>choco-install.log
- choco install codecov -y -r >>choco-install.log
- yarn install --cwd sample/sample-client --silent

build:
  project: src\JsonServices.sln
  parallel: true
  publish_nuget: true
  publish_nuget_symbols: true
  use_snupkg_format: true
  verbosity: minimal

artifacts:
- path: '**\*.nupkg' # find all NuGet packages recursively

before_test:
# Start sample JsonServices server 
- bin\Sample\Debug\net46\JsonServices.Sample.Server.exe install
- bin\Sample\Debug\net46\JsonServices.Sample.Server.exe start

test_script:
# .NET unit tests
- dotnet test --no-build src\JsonServices.Core.Tests
- dotnet test --no-build src\JsonServices.Serialization.Tests
- dotnet test --no-build src\JsonServices.Transport.Fleck.Tests
- dotnet test --no-build src\JsonServices.Transport.NetMQ.Tests
- dotnet test --no-build src\JsonServices.Transport.WebSocketSharp.Tests
- dotnet test --no-build src\JsonServices.Auth.SecureRemotePassword.Tests

# .NET code coverage (skipped NetMQ due to strange behavior under OpenCover instrumentation)
- OpenCover.Console.exe -returntargetcode -register:administrator -target:"nunit3-console.exe" -targetargs:"C:\projects\jsonservices\bin\UnitTests\Debug\net46\JsonServices.Tests.dll" -excludebyattribute:*.Explicit* -output:".\JsonServices.Tests.xml"
- OpenCover.Console.exe -returntargetcode -register:administrator -target:"nunit3-console.exe" -targetargs:"C:\projects\jsonservices\bin\UnitTests\Debug\net46\JsonServices.Serialization.Tests.dll" -excludebyattribute:*.Explicit* -output:".\JsonServices.Serialization.Tests.xml"
- OpenCover.Console.exe -returntargetcode -register:administrator -target:"nunit3-console.exe" -targetargs:"C:\projects\jsonservices\bin\UnitTests\Debug\net46\JsonServices.Transport.Fleck.Tests.dll" -excludebyattribute:*.Explicit* -output:".\JsonServices.Transport.Fleck.Tests.xml"
#- OpenCover.Console.exe -returntargetcode -register:administrator -target:"nunit3-console.exe" -targetargs:"C:\projects\jsonservices\bin\UnitTests\Debug\net46\JsonServices.Transport.NetMQ.Tests.dll" -excludebyattribute:*.Explicit* -output:".\JsonServices.Transport.NetMQ.Tests.xml"
- OpenCover.Console.exe -returntargetcode -register:administrator -target:"nunit3-console.exe" -targetargs:"C:\projects\jsonservices\bin\UnitTests\Debug\net46\JsonServices.Transport.WebSocketSharp.Tests.dll" -excludebyattribute:*.Explicit* -output:".\JsonServices.Transport.WebSocketSharp.Tests.xml"
- OpenCover.Console.exe -returntargetcode -register:administrator -target:"nunit3-console.exe" -targetargs:"C:\projects\jsonservices\bin\UnitTests\Debug\net46\JsonServices.Auth.SecureRemotePassword.Tests.dll" -excludebyattribute:*.Explicit* -output:".\JsonServices.Auth.SecureRemotePassword.Tests.xml"

# TypeScript unit tests with coverage
- yarn --cwd sample/sample-client test --coverage --ci --forceExit

after_test:
# Stop sample JsonServices server 
- bin\Sample\Debug\net46\JsonServices.Sample.Server.exe stop

# Upload OpenCover reports to codecov.io
- codecov -f "JsonServices.Tests.xml"
- codecov -f "JsonServices.Serialization.Tests.xml"
- codecov -f "JsonServices.Transport.Fleck.Tests.xml"
#- codecov -f "JsonServices.Transport.NetMQ.Tests.xml"
- codecov -f "JsonServices.Transport.WebSocketSharp.Tests.xml"
- codecov -f "JsonServices.Auth.SecureRemotePassword.Tests.xml"

# Upload jest coverage reports to codecov.io
- codecov -f "sample/sample-client/coverage/clover.xml"
